/**
 * Copyright 1993-2015 NVIDIA Corporation.  All rights reserved.
 *
 * Please refer to the NVIDIA end user license agreement (EULA) associated
 * with this source code for terms and conditions that govern your use of
 * this software. Any use, reproduction, disclosure, or distribution of
 * this software and related documentation outside the terms of the EULA
 * is strictly prohibited.
 *
 */

/*
GPUPowerTest is derived from CUDA samples from which the above notice is taken
and is the context of the EULA.
*/
$ ./gpt -h
Usage: ./gpt -u <power load up duration seconds>
        -d <power load down duration seconds>
        -t <load test duration seconds>
        [ -c N spin N CPU cores per GPU]
        [ -i comma-seprated GPU list]


$  mpirun --allow-run-as-root -np 8 -H localhost:8  ./gpt # ... (GPU per MPI RANK)
-u: up time (float)
-d: down time (float)
-t: time (duration in seconds (int)
-c: N spin N CPU cores per GPU
-p: number of FP32 streams (int) max 45
-f: number of TF32 streams (int) max 50
-s: inject spin_kernels in the FP32 stream, (int) default 0

# e.g.

$  mpirun --allow-run-as-root -np 8 -H localhost:8  ./gpt -t 3000  -u .001 -d .001 -D

$ mpirun --allow-run-as-root -np 8 -H localhost:8  ./gpt -t 300  -u 10 -d 1 

$ mpirun --allow-run-as-root -np 8 -H localhost:8  ./gpt -t 300  -u 10 -d 1 -p 16 -f 0 -s 0


# For a machine with CMT disabled use these mpi options to spin multi core
mpirun -np 8 -x LD_LIBRARY_PATH --map-by ppr:2:numa:pe=11:overload-allowed ./gpt -u 5 -d .5 -t 600

Also included is a NVlink load generator, nvlbm.cu. Currently needs to be compiled seperately, e.g.
nvcc -o nvlbm nvlbm.cu -lpthread
or run the bld_nvlbm.sh script. The nvlbm binary can be run standalone to generate NVlink traffic,
or simultaneously with gpt to generate additional load and power consumption.
By default, nvlbm will generate traffic between all installed GPUs. The only option is the
"-t" flag to specify the run duration in seconds, e.g.

nvlbm -t 300

to run for 5 minutes.
With DCGM installed, NVlink traffic, along with power can be monitored easily:

dcgmi dmon -e 100,155,1002,1011,1012

The above will sample every second.


